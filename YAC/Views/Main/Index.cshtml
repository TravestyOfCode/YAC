@model IList<ToDoListModel>

@{
    ViewData["Title"] = "Checklists";
}

<div class="flex justify-between m-4">
    <div class="text-2xl font-bold">Checklists</div>
    <button class="bg-green-600 border border-green-800 rounded text-white hover:bg-green-500 px-2"
            hx-post="/Main/Create" hx-prompt="Checklist Name" hx-target="#main" hx-swap="innerHTML">Add Checklist</button>
</div>

@if(Model== null || Model.Count < 1)
{
    <div>You have no Checklists.</div>
}
else
{   
    <form id="trash" hx-post="/Main/DeleteList/" hx-trigger="deleteList" hx-confirm="Are you sure you want to delete this?" hx-target="#main">
        <input type="hidden" name="Id" id="trashId"/>
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-16 h-16">
            <path stroke-linecap="round" stroke-linejoin="round" d="m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0" />
        </svg>

    </form>

    <div id="todolist" class="flex gap-x-2 my-4 ml-8">
    @foreach (var tdl in Model)
    {
        <partial name="EditableToDoList" for="@tdl" />
    }
</div>
}

@section Scripts {
    <script>
        function DragStart(evt) {
            // Change the evtement to show that it's being dragged
            // for example: evt.target.classList.add("dragging");
            
            // Clear the drag data cache
            evt.dataTransfer.clearData();

            // Set the drag format and value
            console.log(`Drag Start with ID: ${evt.target.id}`);

            evt.dataTransfer.setData("text", evt.target.id.replace('todolist-',''));
        }

        function DragEnd(evt) {
            // Clear any class formats that change when dragged
            // for example: evt.target.classList.remove("dragging");
        }

        const trashTarget = document.getElementById("trash");
        
        // Prevent any default action when dragged over the trash
        trashTarget.addEventListener("dragover", (ev) => {
            ev.preventDefault();
        });

        trashTarget.addEventListener("drop", (ev) => {
            ev.preventDefault();

            const sourceId = ev.dataTransfer.getData("text");
            
            var trashInput = document.getElementById("trashId");
            trashInput.value = sourceId;
            
            htmx.trigger("#trash", "deleteList", {id: sourceId});
        });

    </script>
}