@model IList<ToDoListModel>

@{
    ViewData["Title"] = "Checklists";
}

<div class="flex flex-row h-full">
    <div class="flex self-center hidden border-b border-slate-700 bg-gray-200 text-gray-800 dark:bg-slate-700 dark:text-gray-300 h-full" id="sidebar" ondragend="DragEnd(event)">
        <partial name="MainSidebar" />
    </div>

    <div class="main-content">
        <div class="flex justify-between m-4">
            <div class="text-2xl font-bold">Checklists</div>
            <button class="bg-green-600 border border-green-800 rounded text-white hover:bg-green-500 px-2"
                    hx-post="/Main/Create" hx-prompt="Checklist Name" hx-target="#main" hx-swap="innerHTML">
                Add Checklist
            </button>
        </div>

        @if (Model == null || Model.Count < 1)
        {
            <div>You have no Checklists.</div>
        }
        else
        {


            <div id="todolist" class="flex gap-x-2 my-4 ml-8">
                @foreach (var tdl in Model)
                {
                    <partial name="EditableToDoList" for="@tdl" />
                }
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        function DragStart(evt) {
            evt.dataTransfer.clearData();
            evt.dataTransfer.setData("text", evt.target.id.replace('todolist-', ''));
            document.getElementById("sidebar").classList.remove("hidden");
        }

        function DragEnd(evt) {
            // Clear any class formats that change when dragged
            // for example: evt.target.classList.remove("dragging");
            evt.preventDefault();
            // Hide the sidebar with the trash can
            document.getElementById("sidebar").classList.add("hidden");

        }

        function DragOver(evt) {
            // TODO: Check if this is a valid drop zone.
            evt.preventDefault();
        }

        function Drop(evt) {
            evt.preventDefault();

            const sourceId = evt.dataTransfer.getData("text");

            var trashInput = document.getElementById("trashId");
            trashInput.value = sourceId;

            htmx.trigger("#trash", "deleteList", { id: sourceId });
        }
    </script>
                    }